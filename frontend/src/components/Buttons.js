import { config } from "@react-spring/three";
import Button from "./Button";

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React from "react";

export default function Buttons({
  playing,
  setPlaying,
  soundOn,
  setSoundOn,
  songIndex,
  setSongIndex,
  seeMenu,
  setSeeMenu,

  position,
}) {
  const numSongs = 5;
  const scaleNormal = 0.03;
  const scalePressed = 0.025;
  const hoveringScale = 0.032;
  const springConfig = config.bouncy;

  // Additional unclick handler for play button
  const playUnclickHandler = ({ setPlaying, playing }) => {
    setPlaying(!playing);
    console.log("setting play option");
  };

  return (
    <group scale={0.3} position={position}>
      <Button
        id="soundOnOffButton"
        scaleNormal={scaleNormal}
        scalePressed={scalePressed}
        hoveringScale={hoveringScale}
        springConfig={springConfig}
        switchButton={soundOn}
        setSwitchButton={setSoundOn}
        modelPath1={"/models/buttons/soundon_button.glb"}
        modelPath2={"/models/buttons/soundoff_button.glb"}
        position={[2, -1, 4]}
        rotation={[0.5, 0.5, -0.25]}
        additionalUnclickHandler={() => {
          setSoundOn(!soundOn);
        }}
      />
      <Button
        id="playPauseButton"
        scaleNormal={scaleNormal}
        scalePressed={scalePressed}
        hoveringScale={hoveringScale}
        springConfig={springConfig}
        switchButton={playing}
        setSwitchButton={setPlaying}
        modelPath1={"/models/buttons/pause_button.glb"}
        modelPath2={"/models/buttons/play_button.glb"}
        position={[0, -1, 4]}
        rotation={[0.5, 0.5, -0.25]}
        additionalUnclickHandler={playUnclickHandler}
        additionalUnclickHandlerConfigs={{ setPlaying, playing }}
      />

      <Button
        id="nextButton"
        scaleNormal={scaleNormal}
        scalePressed={scalePressed}
        hoveringScale={hoveringScale}
        springConfig={springConfig}
        switchButton={true}
        modelPath1={"/models/buttons/next_button.glb"}
        modelPath2={"/models/buttons/next_button.glb"}
        position={[1, -1, 4]}
        rotation={[0.5, 0.5, -0.25]}
        additionalUnclickHandler={() => {
          if (songIndex == numSongs) {
            setSongIndex(0); // Allows songIndex to loop
          } else {
            setSongIndex(songIndex + 1);
          }
        }}
      />
      <Button
        id="prevButton"
        scaleNormal={scaleNormal}
        scalePressed={scalePressed}
        hoveringScale={hoveringScale}
        springConfig={springConfig}
        modelPath1={"/models/buttons/prev_button.glb"}
        modelPath2={"/models/buttons/prev_button.glb"}
        position={[-1, -1, 4]}
        rotation={[0.5, 0.5, -0.25]}
        additionalUnclickHandler={() => {
          if (songIndex == 0) {
            setSongIndex(numSongs); // Allows songIndex to loop
          } else {
            setSongIndex(songIndex - 1);
          }
        }}
      />
      <Button
        id="menuButton"
        scaleNormal={0.65}
        scalePressed={0.6}
        hoveringScale={0.7}
        springConfig={springConfig}
        modelPath1={"/models/buttons/menu_button.glb"}
        modelPath2={"/models/buttons/menu_button.glb"}
        position={[-1.85, -0.65, 4.5]}
        rotation={[Math.PI * 0.12, Math.PI * 0.16, -Math.PI * 0.08]}
        additionalUnclickHandler={() => {
          setSeeMenu(true);
          // window.open("https://github.com/seungguini/vintage_turntable");
        }}
      />
    </group>
  );
}
